{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/providers/default-provider.ts","webpack:///./src/providers/toutiao-provider.ts","webpack:///./src/index.ts","webpack:///./src/i18n.ts","webpack:///./src/config.ts","webpack:///./src/providers/provider-factory.ts","webpack:///./src/providers/alipay-provider.ts","webpack:///./src/store.ts","webpack:///./src/util.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","import { IProvider } from \"./provider\";\n\n// tslint:disable-next-line\ndeclare var getCurrentPages;\n\nexport class DefaultProvider implements IProvider {\n    protected provider: any;\n    constructor(provider: any) {\n        this.provider = provider;\n    }\n    public request(params: { url: string }) {\n        const fn = this.provider && this.provider.request;\n        return this.promisify(fn, params);\n    }\n    public getStorageInfo(): Promise<{ keys: string[]; }> {\n        const fn = this.provider && this.provider.getStorageInfo;\n        return this.promisify(fn);\n    }\n    public removeStorage(params: { key: string; }) {\n        const fn = this.provider && this.provider.removeStorage;\n        return this.promisify(fn, params);\n    }\n    public setStorage(params: { key: string; data: any; }): Promise<any> {\n        const fn = this.provider && this.provider.setStorage;\n        return this.promisify(fn, params);\n    }\n    public getStorage(params: { key: string; }): Promise<{ data: any; }> {\n        const fn = this.provider && this.provider.getStorage;\n        return this.promisify(fn, params);\n    }\n    public getStorageSync(key: string): any {\n        const fn = this.provider && this.provider.getStorageSync;\n        return fn(key);\n    }\n    public getCurrentPages(): [{ route: string; }] {\n        let fn = this.provider && this.provider.getCurrentPages;\n        fn = fn || getCurrentPages;\n        return fn();\n    }\n    private promisify(fn, params?: object): Promise<any> {\n        if (typeof fn !== \"function\") { throw new TypeError(\"Invalid provider type.\"); }\n        params = Object.assign({}, params);\n        return new Promise((success, fail) => fn({ ...params, success, fail }))\n            .catch((err) => (console.log(err), Promise.reject(err)));\n    }\n}\n","import { DefaultProvider } from \"./default-provider\";\nimport { IProvider } from \"./provider\";\n\nexport class TTProvider extends DefaultProvider implements IProvider {\n    public getStorageSync(key: string) {\n        return super.getStorageSync(key).data;\n    }\n}\n","import { I18n } from \"./i18n\";\nconst i18n = new I18n();\nexport { i18n };\nexport { IProvider } from \"./providers/provider\";\nexport { DefaultProvider } from \"./providers/default-provider\";\n","import { defaultConfig, II18nConfigOptions } from \"./config\";\nimport { I18nStore } from \"./store\";\nimport { Util } from \"./util\";\n\ninterface II18nOptions {\n    /**\n     * The resource(page or component) path, default get current path by 'getCurrentPages'.\n     */\n    path?: string;\n    /**\n     * local texts resource, if not set, it will fetch from the remote.\n     */\n    texts?: Record<string, any>;\n}\n\nlet config: II18nConfigOptions;\nlet store: I18nStore;\nlet util: Util;\nlet userLanguage: string;\n\nexport class I18n {\n\n    /**\n     * Get current language\n     */\n    get language() {\n        const { rememberLanguage, languageStorageKey, provider } = config;\n        if (rememberLanguage && languageStorageKey) {\n            if (userLanguage) {\n                return userLanguage;\n            } else {\n                const lang = provider.getStorageSync(config.languageStorageKey);\n                if (lang) {\n                    return userLanguage = lang;\n                }\n            }\n        }\n        return config.lang;\n    }\n\n    /**\n     * Set current language\n     */\n    set language(lang: string) {\n        config.lang = lang;\n        const { rememberLanguage, languageStorageKey, provider } = config;\n        if (rememberLanguage && languageStorageKey) {\n            userLanguage = lang;\n            provider.setStorage({ key: languageStorageKey, data: lang });\n        }\n    }\n\n    constructor(options?: II18nConfigOptions) {\n        this.config(options);\n    }\n\n    /**\n     * Configure i18n options\n     * @param options\n     */\n    public config(options: II18nConfigOptions) {\n        config = Object.assign(defaultConfig, options);\n        store = new I18nStore(config);\n        util = new Util(config);\n        util.debug(\"Current i18n config:\", config);\n    }\n\n    /**\n     * Get index resource.\n     */\n    public getIndex(force?: boolean): Promise<Record<string, any>> {\n        const { indexUrl, cachable } = config;\n        if (!cachable || force) {\n            if (!util.isFn(indexUrl)) { throw new Error(\"Please configure the 'indexUrl' option first.\"); }\n            const url = indexUrl();\n            if (this.getIndex.prototype.promise) { return this.getIndex.prototype.promise; }\n            util.debug(\"Getting index resource from remote\");\n            const clear = () => this.getIndex.prototype.promise = undefined;\n            const promise = util.request(url)\n                .then((data) => store.clear(data))\n                .then((data) => (clear(), data), (error) => (clear(), Promise.reject(error)));\n            return this.getIndex.prototype.promise = promise;\n        } else {\n            util.debug(\"Trying get index resource from local\");\n            return Promise.resolve(this.getIndex.prototype.data)\n                .then((data) => data || this.getIndex(true))\n                .then((data) => this.getIndex.prototype.data = data);\n        }\n    }\n\n    /**\n     * Get text resources\n     * @param options options\n     */\n    public getTexts(options: II18nOptions = {}): Promise<any> {\n        const { texts } = options;\n        if (texts) {\n            util.debug(\"Use local texts\", texts);\n            return Promise.resolve(this.mergeTexts(texts));\n        }\n        const { textsUrl, cachable } = config;\n        if (!util.isFn(textsUrl)) { throw new Error(\"Please configure the 'textsUrl' option first.\"); }\n        const path = options.path || util.getCurrentPageRoute();\n        util.debug(`Current i18n path is ${path}`);\n        if (typeof path !== \"string\") { throw new TypeError(\"The path must be string type.\"); }\n        return this.getIndex()\n            .then((resources) => resources[path])\n            .then((hash) => {\n                if (!hash) {\n                    return Promise.reject(new Error(`The path '${path}' was not defined in index file.`));\n                }\n                const url = textsUrl(hash, path);\n                if (cachable) {\n                    return store.get(path).then((data: any) => {\n                        if (data && data.version === hash) {\n                            util.debug(`Getting text resource from cache.`);\n                            return data;\n                        } else {\n                            if (!data) {\n                                util.debug(`The cache resource not exists and getting text resource from remote`);\n                            } else {\n                                store.remove(path);\n                                util.debug(`The cache resource has expired.`);\n                            }\n                            return util.request(url)\n                                .then((res: any) => (res.version = hash, res))\n                                .then((t: any) => (store.set(path, t), t));\n                        }\n\n                    });\n                } else {\n                    util.debug(`Getting text resource from remote`);\n                    return util.request(url);\n                }\n            })\n            .then((t) => this.mergeTexts(t));\n    }\n\n    /**\n     * Merge texts\n     * @param data multi-language texts\n     * @param lang language\n     *\n     * mergetTexts({zh:{hi:'你好'},en:{hi:'Hi'}},'en')\n     * result: {hi:'Hi'}\n     */\n    public mergeTexts(data: any, lang?: string) {\n        if (!data) { return {}; }\n        const language = lang || this.language;\n        if (!(language in data)) {\n            util.debug(`The resource corresponding to ${language} does not exist.`, data);\n        }\n        return data[language];\n    }\n}\n","import { IProvider } from \"./providers/provider\";\nimport { createProvider } from \"./providers/provider-factory\";\n\nexport interface II18nConfigOptions {\n    /**\n     * Whether to use the cache, default is true.\n     */\n    cachable?: boolean;\n    /**\n     * Whether to enable debug mode, default is false.\n     */\n    debug?: boolean;\n    /**\n     * The stroage key for language user selected, it only works when setting 'rememberLanguage' to true.\n     * default is 'i18n_language'\n     */\n    languageStorageKey?: string;\n    /**\n     * Whether to remember the language selected by the user.\n     */\n    rememberLanguage?: boolean;\n    /**\n     * The api provider, it is automatically created from the current environment by default.\n     */\n    provider?: IProvider;\n    /**\n     * The key prefix for storage.\n     */\n    storageKeyPrefix?: string;\n    /**\n     * Initial language, default is 'zh_CN'.\n     */\n    lang?: string;\n    /**\n     * Texts file path factory function.\n     */\n    textsUrl: (hash: string, path: string) => string;\n    /**\n     * Index file path factory function.\n     */\n    indexUrl: () => string;\n}\n\nexport const defaultConfig = {\n    cachable: true,\n    debug: false,\n    lang: \"zh_CN\",\n    languageStorageKey: \"i18n_language\",\n    provider: createProvider(),\n    rememberLanguage: true,\n    storageKeyPrefix: \"i18n\",\n};\n","import { AliProvider } from \"./alipay-provider\";\nimport { DefaultProvider } from \"./default-provider\";\nimport { IProvider } from \"./provider\";\nimport { TTProvider } from \"./toutiao-provider\";\n\n// tslint:disable\ndeclare var wx, my, tt, swan;\n\nexport function createProvider(): IProvider {\n    try {\n        if (wx !== undefined) {\n            return new DefaultProvider(wx);\n        }\n    } catch (error) { }\n    try {\n        if (my !== undefined) {\n            return new AliProvider(my);\n        }\n    } catch (error) { }\n    try {\n        if (tt !== undefined) {\n            return new TTProvider(tt);\n        }\n    } catch (error) { }\n    try {\n        if (swan !== undefined) {\n            return new DefaultProvider(tt);\n        }\n    } catch (error) { }\n}\n","import { IProvider } from \"./provider\";\nimport { TTProvider } from \"./toutiao-provider\";\n\nexport class AliProvider extends TTProvider implements IProvider {\n    public request(params: { url: string }): Promise<{ data: any, statusCode: number, header: object }> {\n        return super.request(params)\n            .then((res) => (res.statusCode = res.status, res));\n    }\n}\n","import { II18nConfigOptions } from \"./config\";\nimport { IProvider } from \"./providers/provider\";\n\nexport class I18nStore {\n    private provider: IProvider;\n    private prefix: string;\n    private languageKey: string;\n    constructor(config: II18nConfigOptions) {\n        this.prefix = config.storageKeyPrefix;\n        this.provider = config.provider;\n        this.languageKey = config.languageStorageKey;\n    }\n    public get(path: string) {\n        const key = this.getKey(path);\n        return this.provider.getStorage({ key })\n            .then((res) => res.data)\n            .catch(() => null);\n    }\n    public set(path: string, data: any) {\n        const key = this.getKey(path);\n        return this.provider.setStorage({ key, data });\n    }\n    public has(path: string): Promise<boolean> {\n        const key = this.getKey(path);\n        return this.provider.getStorageInfo()\n            .then((res) => res.keys.indexOf(key) >= 0)\n            .catch(() => false);\n    }\n    public remove(path: string) {\n        const key = this.getKey(path);\n        return this.provider.removeStorage({ key });\n    }\n    public getAll() {\n        if (!this.prefix) {\n            return Promise.reject(new Error(\"missing i18n configuration option 'storageKeyPrefix'\"));\n        }\n        return this.provider.getStorageInfo()\n            .then((info) => info.keys)\n            .then((keys) => keys.filter((key: string) => key.startsWith(this.prefix)));\n    }\n    public clear(data: object) {\n        const from = this.getKey(\"\").length;\n        this.getAll()\n            .then((keys) => keys.filter((key) => key !== this.languageKey && !(key.substr(from) in data)))\n            .then((keys) => keys.forEach((key) => this.provider.removeStorage({ key })))\n            .catch(console.error);\n        return data;\n    }\n    private getKey(path: string) {\n        return `${this.prefix}/${path}`;\n    }\n}\n","import { II18nConfigOptions } from \"./config\";\n\nexport class Util {\n    constructor(private config: II18nConfigOptions) { }\n    public getCurrentPageRoute() {\n        const pages = this.config.provider.getCurrentPages();\n        const currentPage = pages[pages.length - 1];\n        return currentPage.route;\n    }\n\n    public request(url: string) {\n        this.debug(`i18n request url: ${url}`);\n        return this.config.provider.request({ url })\n            .then((res: any) => (res.statusCode = res.statusCode || res.status, res))\n            .then(({ statusCode, data }) => (statusCode === 200 ? data : Promise.reject(new Error(`Incorrent status code ${statusCode}`))))\n            .then((data: any) => {\n                if (typeof data === \"object\") {\n                    return data;\n                }\n                return Promise.reject(new Error(\"invalid i18n config file, please check file contents.\"));\n            })\n            .catch((error) => (this.debug(\"request error:\", error), Promise.reject(error)));\n    }\n\n    public debug(...args: any[]) {\n        if (this.config.debug) {\n            console.log(...args);\n        }\n    }\n\n    public isFn(fn: any) {\n        return typeof fn === \"function\";\n    }\n}\n"],"sourceRoot":""}